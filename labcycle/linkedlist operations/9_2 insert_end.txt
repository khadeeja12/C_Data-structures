#include <stdio.h>
#include<malloc.h>
struct node
{
    int data;
    struct node *next;
};
struct node *head=NULL;
void insert(int e)
{
    struct node *t;
    if(head==NULL)
    {
        head=(struct node*)malloc(sizeof(struct node));
        head->data=e;
        head->next=NULL;
    }
    else
    {
       t=head;
       while(t->next!=NULL)
       {
           t=t->next;
       }
       t->next=(struct node*)malloc(sizeof(struct node));
       t->next->data=e;
       t->next->next=NULL;
    }
}
void insert_end(int e)
{      
         struct node *t;
         t=(struct node*)malloc(sizeof(struct node));
         t->data=e;
         t->next=NULL;
         if(head==NULL)
         {
             head=t;
         }
         else
         {
             struct node *lastnode;
             lastnode=head;
             while(lastnode->next!=NULL)
             {
                 lastnode=lastnode->next;
             }
             lastnode->next=t;
         }
         
}
void disp()
{
    struct node *t;
    if(head==NULL)
    {
        printf("\n linked list is empty");
        
    }
    else
    {
        t=head;
        while(t!=NULL)
        {
            printf(" %d \t",t->data);
            t=t->next;
        }
    }
}
int main()
{
    printf("\n The linked list is:");
    insert(10);
    insert(20);
    insert(30);
    disp();
    printf("\n After inserting at the end:");
    insert_end(40);
    disp();

    return 0;
}
